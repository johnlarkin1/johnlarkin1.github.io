.btn,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  position: relative;
  display: inline-block;
  padding: 18px 30px;
  font-size: 11px;
  font-family: inherit;
  line-height: 1.5;
  letter-spacing: 0.2em;
  text-decoration: none;
  text-transform: uppercase;
  white-space: nowrap;
  cursor: pointer;
  color: $bg-color;
  background-color: $button-dark;
  text-align: center;
  border: 0;
  border-radius: 0;
  transition: all 0.45s cubic-bezier(0.25, 1, 0.33, 1);
  outline: 0;

  &::after {
    display: none;
  }

  &:hover,
  :focus,
  :active {
    color: $bg-color;
    background-color: lighten($button-dark, 14%);
    outline: 0;
  }
}

.btn + .btn {
  margin-top: 2em;

  @include breakpoint(350px) {
    margin-top: 0;
    margin-left: 2em;
  }
}

button:disabled {
  cursor: not-allowed;
  opacity: .65;
  transition: background-color .2s ease;

  &:hover,
  :focus {
    background-color: $button-dark;
  }
}


input[type="checkbox"] {
  // Reset properties that don't make sense for checkboxes
  padding: 0;
  border: 0;
  width: auto; // Remove width 100% from generic input styles
  margin: 5px;
  cursor: pointer;

  // Optional: Add a custom appearance
  appearance: none; // This line will remove the default checkbox style
  // Add your custom styles below, for example:
  height: 15px;
  width: 15px;
  background-color: $bg-color;
  border: 1px solid $border-color;
  transition: background-color .25s, border-color .25s;

  &:checked {
    background-color: $button-dark;
    border-color: $button-dark;
  }

  &:focus {
    border-color: $primary;
  }

  // You may also want to handle the hover state for visual feedback
  &:hover {
    border-color: darken($border-color, 10%);
  }
}